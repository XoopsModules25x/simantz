/*
 * Nitobi Complete UI 1.0
 * Copyright(c) 2008, Nitobi
 * support@nitobi.com
 * 
 * http://www.nitobi.com/license
 */
nitobi.ui.BinaryStateButtonXsl=
   "<xsl:template match=\"binarystatebutton\">"+
      // "<a href=\"#\" class=\"ntb-button\">"+ // Temp removed due to css conflict with other apps.
         "<div class=\"ntb-binarybutton\" onmousemove=\"return false;\" onmousedown=\"if (this.object.m_Enabled) this.className='ntb-button-down';\" onmouseup=\"(this.object.isChecked()?this.object.check():this.object.uncheck())\" onmouseover=\"if (this.object.m_Enabled) this.className='ntb-button-highlight';\" onmouseout=\"(this.object.isChecked()?this.object.check():this.object.uncheck())\" align=\"center\">"+
			"<xsl:attribute name=\"image_disabled\">"+
			"<xsl:choose>"+
						"<xsl:when test=\"../../@image_directory\">"+
							"<xsl:value-of select=\"concat(../../@image_directory,@image_disabled)\" />"+
						"</xsl:when>"+
						"<xsl:otherwise>"+
							    "<xsl:value-of select=\"@image_disabled\" />"+
						"</xsl:otherwise>"+
			"</xsl:choose>"+
        
	         "</xsl:attribute>"+
	         
	         "<xsl:attribute name=\"image_enabled\">"+
					"<xsl:choose>"+
						"<xsl:when test=\"../../@image_directory\">"+
							"<xsl:value-of select=\"concat(../../@image_directory,@image)\" />"+
						"</xsl:when>"+
						"<xsl:otherwise>"+
							"<xsl:value-of select=\"@image\" />"+
						"</xsl:otherwise>"+
					"</xsl:choose>"+
		         "</xsl:attribute>"+
	         "<xsl:attribute name=\"title\">"+
	            "<xsl:value-of select=\"@tooltip_text\" />"+
	         "</xsl:attribute>"+
	         "<xsl:attribute name=\"onclick\">"+
				// The following line is var e='@onclick_event';eval(this.OnClickHandler(e)); generated by EbaConstructValidXpathQuery
				// e.g. writeLog(EbaConstructValidXpathQuery("var e='X';eval(this.object.OnClickHandler(e));")); and then replace X with @onclick_event
	            "<xsl:value-of select='concat(\"this.object.toggle();\",&quot;v&quot;,&quot;a&quot;,&quot;r&quot;,&quot; &quot;,&quot;e&quot;,&quot;=&quot;,&quot;&apos;&quot;,@onclick_event,&quot;&apos;&quot;,&quot;;&quot;,&quot;e&quot;,&quot;v&quot;,&quot;a&quot;,&quot;l&quot;,&quot;(&quot;,&quot;t&quot;,&quot;h&quot;,&quot;i&quot;,&quot;s&quot;,&quot;.&quot;,&quot;o&quot;,&quot;b&quot;,&quot;j&quot;,&quot;e&quot;,&quot;c&quot;,&quot;t&quot;,&quot;.&quot;,&quot;o&quot;,&quot;n&quot;,&quot;C&quot;,&quot;l&quot;,&quot;i&quot;,&quot;c&quot;,&quot;k&quot;,&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;d&quot;,&quot;l&quot;,&quot;e&quot;,&quot;r&quot;,&quot;(&quot;,&quot;e&quot;,&quot;)&quot;,&quot;)&quot;,&quot;;&quot;,&apos;&apos;)' />"+
	         "</xsl:attribute>"+
	         "<xsl:attribute name=\"id\">"+
	            "<xsl:value-of select=\"@id\" />"+
	         "</xsl:attribute>"+
	         "<xsl:attribute name=\"style\">"+
				"<xsl:choose>"+
					"<xsl:when test=\"../../@height\">"+
						"<xsl:value-of select=\"concat('float:left;width:',../../@height,'px;height:',../../@height - 1,'px')\" />"+
					"</xsl:when>"+
						"<xsl:otherwise>"+
							"<xsl:value-of select=\"concat('float:left;width:',@width,'px;height:',@height,'px')\" />"+
						"</xsl:otherwise>"+
					"</xsl:choose>" + 
	         "</xsl:attribute>"+
         	 
            "<img border=\"0\">"+
	            "<xsl:attribute name=\"src\">"+
					"<xsl:choose>"+
						"<xsl:when test=\"../../@image_directory\">"+
							"<xsl:value-of select=\"concat(../../@image_directory,@image)\" />"+
						"</xsl:when>"+
						"<xsl:otherwise>"+
							"<xsl:value-of select=\"@image\" />"+
						"</xsl:otherwise>"+
					"</xsl:choose>"+
		         "</xsl:attribute>"+
		         "<xsl:attribute name=\"style\">"+
		        
					"<xsl:variable name=\"top_offset\">"+
						"<xsl:choose>"+
							"<xsl:when test=\"@top_offset\">"+
									"<xsl:value-of select=\"@top_offset\" />"+
							"</xsl:when>"+
							"<xsl:otherwise>"+
									"0"+
							"</xsl:otherwise>"+
						"</xsl:choose>" + 
					"</xsl:variable>"+

					"<xsl:choose>"+
						"<xsl:when test=\"../../@height\">"+
							"<xsl:value-of select=\"concat('MARGIN-TOP:',((../../@height - @height) div 2) - 1 + number($top_offset),'px;MARGIN-BOTTOM:0px')\" />"+
						"</xsl:when>"+
						"<xsl:otherwise>"+
							"<xsl:value-of select=\"concat('MARGIN-TOP:',(@height - @image_height) div 2,'px;MARGIN-BOTTOM:0','px')\" />"+
						"</xsl:otherwise>"+
					"</xsl:choose>" + 
				 "</xsl:attribute>"+
			// Note: this CDATA contains a space, which is required for IE.
            "</img><![CDATA[ ]]>"+
         "</div>"+
      //"</a>"+
   "</xsl:template>";

/**
 * A button that has a binary state. It is other switched on or off.
 * @constructor
 * @extends nitobi.ui.Button
 * @param xml {string} XML that defines the button.
 * @param id {string} The id of the button.
 * @private
 */
nitobi.ui.BinaryStateButton = function (xml, id)
{
	this.initialize(xml,nitobi.ui.BinaryStateButtonXsl,id);
	/**
	 * @ignore
	 */
	this.m_Checked=false;
}

nitobi.lang.extend(nitobi.ui.BinaryStateButton, nitobi.ui.Button);

/**
 * Checks to see if the button is checked or not.
 * @return {bool} true if the button is checked and false otherwise.
 */
nitobi.ui.BinaryStateButton.prototype.isChecked = function()
{
	return this.m_Checked;
}

/**
 * Puts the button in the checked state.
 */
nitobi.ui.BinaryStateButton.prototype.check = function()
{
	var button = this.getHtmlElementHandle();
	button.className = "ntb-button-checked";
	this.m_Checked=true;
}

/**
 * Puts the button in the unchecked state.
 */
nitobi.ui.BinaryStateButton.prototype.uncheck = function()
{
	var button = this.getHtmlElementHandle();
	button.className = "ntb-button";
	this.m_Checked=false;
}

/**
 * Toggles the state of the button.
 */
nitobi.ui.BinaryStateButton.prototype.toggle = function()
{
	var button = this.getHtmlElementHandle();
	if (button.className == "ntb-button-checked")
	{
		this.uncheck();
	}
	else
	{
		this.check();
	};
}
