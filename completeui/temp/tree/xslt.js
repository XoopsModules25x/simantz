var temp_ntb_xslTemplate='<?xml version="1.0" encoding="utf-8"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ntb="http://www.nitobi.com"> <xsl:output method="xml" omit-xml-declaration="yes" /> <xsl:strip-space elements="*"/> <x:p-x:n-iequirks"x:s-\'false\'"></x:p-> <x:p-x:n-sidebar"x:s-/ntb:tree/@sidebarenabled"></x:p-> <x:p-x:n-cssclass"x:s-/ntb:tree/@cssclass"></x:p-> <x:p-x:n-theme"x:s-/ntb:tree/@theme"></x:p-> <x:p-x:n-style"x:s-/ntb:tree/@cssstyle"></x:p-> <x:p-x:n-expanded"x:s-/ntb:tree/@expanded"></x:p-> <x:p-x:n-hierarchy"x:s-notanode"></x:p-> <x:p-x:n-locator"></x:p-> <x:p-x:n-apply-id"x:s-\'\'"></x:p-> <x:p-x:n-apply-template"x:s-\'\'"></x:p-> <x:va-x:n-tabindex" > <x:va-x:n-temp"x:s-/ntb:tree/@tabindex" /> <x:c-> <x:wh- test="$temp and $temp != \'\'"> <x:v-x:s-$temp" /> </x:wh-> <x:o-> <x:v-x:s-1000" /> </x:o-> </x:c-> </x:va-> <x:va-x:n-root-locator"x:s-concat(\'$ntb(\',&quot;\'&quot;,/ntb:tree/@id,&quot;\'&quot;,\').jsObject\')" /> <x:va-x:n-expanded-default"> <x:c-> <x:wh- test="$expanded and ($expanded = \'false\')"> <x:v-x:s-\'collapsed\'" /> </x:wh-> <x:o-> <x:v-x:s-\'expanded\'" /> </x:o-> </x:c-> </x:va-> <x:va-x:n-hierarchy-proper"> <x:c-> <x:wh- test="$hierarchy"> <xsl:for-eachx:s-$hierarchy/*"> <xsl:copy> <xsl:copy-ofx:s-@*" /> <x:ct-x:n-dummy" /> </xsl:copy> </xsl:for-each> <x:ct-x:n-dummy" /> </x:wh-> <x:o-> <x:ct-x:n-dummy" /> </x:o-> </x:c-> </x:va-> <x:t- match="/"> <x:c-> <x:wh- test="$apply-id = \'\'"> <x:at-> <x:w- name=\'locator\'> <x:ct-x:n-parent-locator" /> </x:w-> <x:w-x:n-hierarchy"x:s-$hierarchy-proper" /> </x:at-> </x:wh-> <x:o-> <x:c-> <x:wh- test="$apply-template = \'\'"> <xsl:for-eachx:s-//*[@id=$apply-id]"> <x:at-x:s-."> <x:w- name=\'locator\'> <x:ct-x:n-parent-locator" /> </x:w-> <x:w-x:n-hierarchy"x:s-$hierarchy-proper" /> <x:w-x:n-expanded"x:s-$expanded-default" /> </x:at-> </xsl:for-each> </x:wh-> <x:o-> <xsl:for-eachx:s-//*[@id=$apply-id]"> <x:c-> <x:wh- test="$apply-template = \'node-template\'"> <x:ct- name=\'node-template\' > <x:w- name=\'hierarchy\'x:s-$hierarchy-proper" /> <x:w- name=\'locator\'> <x:ct-x:n-parent-locator" /> </x:w-> </x:ct-> </x:wh-> <x:wh- test="$apply-template =\'leaf-template\'"> <x:ct- name=\'leaf-template\' > <x:w- name=\'hierarchy\'x:s-$hierarchy-proper" /> <x:w- name=\'locator\'> <x:ct-x:n-parent-locator" /> </x:w-> </x:ct-> </x:wh-> </x:c-> </xsl:for-each> </x:o-> </x:c-> </x:o-> </x:c-> </x:t-> <x:t-x:n-inner-tree"> <x:at-x:s-ntb:children"> <x:w-x:n-locator">$ntb(\'<x:v-x:s-@id" />\').jsObject</x:w-> <x:w-x:n-hierarchy"> <x:ct-x:n-dummy" /> </x:w-> <x:w-x:n-child-hierarchy"x:s-\'\'" /> </x:at-> </x:t-> <x:t- match="ntb:tree"> <div> <x:a-x:n-id"><x:v-x:s-@id" /></x:a-> <x:a-x:n-class"> ntb-tree-reset <x:c-> <x:wh- test="$theme"> <x:v-x:s-$theme" /> </x:wh-> <x:wh- test="$cssclass"> <x:v-x:s-$cssclass" /> </x:wh-> <x:o-></x:o-> </x:c-> </x:a-><!-- <xsl:if test="$iequirks = \'true\'"> <x:a-x:n-style"><x:v-x:s-$style" /></x:a-> </xsl:if>--> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">scroller</x:w-> </x:ct-> <x:a-x:n-style"> <xsl:if test="$style"> <x:c-> <x:wh- test="$iequirks=\'true\'"> <x:v-x:s-$style" /> </x:wh-> <x:o-> <x:v-x:s-$style" /> </x:o-> </x:c-> </xsl:if> </x:a-> <x:a-x:n-class">tree<xsl:if test="$sidebar = \'true\'"> sidebar-background</xsl:if></x:a-> <x:a-x:n-tabindex"><x:v-x:s-$tabindex" /></x:a-> <x:a-x:n-onkeydown"> <x:ct-x:n-notify"> <x:w-x:n-bubble"x:s-\'false\'" /> </x:ct-> </x:a-> <div style="overflow:hidden;"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">scrollsize</x:w-> </x:ct-> <div style="width:8000px;"> <x:c-> <x:wh- test="$iequirks=\'true\'"> <table border="0" cellpadding="0" cellspacing="0"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">realsize</x:w-> </x:ct-> <tr><td> <nowrap> <x:ct-x:n-inner-tree" /> </nowrap> </td></tr> </table> </x:wh-> <x:o-> <div style="float:left;"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">realsize</x:w-> </x:ct-> <x:ct-x:n-inner-tree" /> </div> <div style="display:block;clear:both;float:none;height:0px;width:auto;overflow:hidden;"><x:ct-x:n-dummy" /></div> </x:o-> </x:c-> </div> </div> </div> </div> </x:t-> <x:t- match="ntb:children"> <x:p-x:n-hierarchy"x:s-\'\'" /> <x:p-x:n-locator"></x:p-> <x:p-x:n-child-hierarchy"><x:ct-x:n-hierarchy" /></x:p-> <x:p-x:n-expanded"x:s-\'expanded\'" /> <div> <x:a-x:n-class">children<xsl:if test="$expanded = \'collapsed\'"> nitobi-hide</xsl:if></x:a-> <x:a-x:n-id"><x:v-x:s-@id" /></x:a-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name"x:s-\'container\'" /> </x:ct-> <x:ct-x:n-dummy" /><!-- For the empty div problem --> <x:at-x:s-ntb:node" > <x:w-x:n-hierarchy"><xsl:copy-ofx:s-$hierarchy" /><xsl:copy-ofx:s-$child-hierarchy" /></x:w-> <x:w-x:n-locator"x:s-concat($locator,\'.getChildren()\')" /> </x:at-> </div> </div> </x:t-> <x:t- match="ntb:node"> <x:p-x:n-hierarchy"x:s-\'\'" /> <x:p-x:n-locator" /> <x:p-x:n-expanded" /> <div class="treenode"> <x:a-x:n-id"><x:v-x:s-@id" /></x:a-> <x:c-> <x:wh- test="ntb:children or @nodetype=\'node\'"> <x:ct-x:n-node-template"> <x:w-x:n-hierarchy"x:s-$hierarchy" /> <x:w-x:n-expanded"x:s-$expanded" /> <x:w-x:n-locator"x:s-concat($locator,\'.getById(\',&quot;\'&quot;,@id,&quot;\'&quot;,\')\')" /> </x:ct-> </x:wh-> <x:o-> <x:ct-x:n-leaf-template"> <x:w-x:n-hierarchy"x:s-$hierarchy" /> <x:w-x:n-expanded"x:s-$expanded" /> <x:w-x:n-locator"x:s-concat($locator,\'.getById(\',&quot;\'&quot;,@id,&quot;\'&quot;,\')\')" /> </x:ct-> </x:o-> </x:c-> </div> </x:t-> <x:t-x:n-node-template"> <x:p-x:n-hierarchy"x:s-\'\'" /> <x:p-x:n-locator" /> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">css</x:w-> </x:ct-> <x:a-x:n-class"> <xsl:if test="@rootenabled = \'true\'">root </xsl:if> <xsl:if test="@cssclass"><x:v-x:s-@cssclass" /></xsl:if> </x:a-> <x:a-x:n-style"> <xsl:if test="@cssstyle"><x:v-x:s-@cssstyle" /></xsl:if> </x:a-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">expander</x:w-> </x:ct-> <x:a-x:n-class"> <xsl:if test="$locator and (ntb:children/ntb:node or @haschildren = \'true\')"> <x:ct-x:n-expanded-proper" /> </xsl:if> </x:a-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">selector</x:w-> </x:ct-> <xsl:if test="number(@tabindex) > -1"> <x:a-x:n-tabindex"><x:v-x:s-@tabindex" /></x:a-> </xsl:if> <x:a-x:n-class"> <xsl:if test="@selected and @selected=\'true\'">selected</xsl:if> </x:a-> <div class="node"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">node</x:w-> </x:ct-> <x:a-x:n-onmousedown"> <x:ct-x:n-notify" > <x:w-x:n-local-name"x:s-\'chooser\'" /> </x:ct-> </x:a-> <x:a-x:n-onmouseover"> <x:ct-x:n-notify" /> </x:a-> <x:a-x:n-onmouseout"> <x:ct-x:n-notify" /> </x:a-> <div> <xsl:if test="$sidebar = \'true\'"> <div class="sidebar"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">sidebar</x:w-> </x:ct-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">flag</x:w-> </x:ct-> <x:a-x:n-class">flag <x:v-x:s-@flag" /></x:a-> <x:ct-x:n-dummy" /> </div> </div> </xsl:if> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">hierarchy</x:w-> </x:ct-> <xsl:copy-ofx:s-$hierarchy" /> </div> <xsl:if test="not(@rootenabled) or @rootenabled != \'true\'"> <x:ct-x:n-junction"> <x:w-x:n-locator"x:s-$locator" /> </x:ct-> </xsl:if> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">chooser</x:w-> </x:ct-> <x:a-x:n-class"> <x:v-x:s-\'chooser\'" /> </x:a-> <div class="icon"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">icon</x:w-> </x:ct-> <xsl:if test="@icon and @icon != \'\'"><x:a-x:n-style">background-image:url(<x:v-x:s-@icon" />);</x:a-></xsl:if> <x:ct-x:n-dummy" /> </div> <div> <span class="label"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">label</x:w-> </x:ct-> <x:v-x:s-@label"/> </span> </div> </div>&#160; <div style="display:block;clear:both;float:none;height:0px;width:auto;overflow:hidden;"><x:ct-x:n-dummy" /></div> </div> </div> </div> </div> </div> <x:c-> <x:wh- test="@rootenabled=\'true\'"> <x:at-x:s-ntb:children" > <x:w-x:n-hierarchy"x:s-$hierarchy" /> <x:w-x:n-locator"x:s-$locator" /> <x:w-x:n-child-hierarchy"x:s-\'\'" /> <x:w-x:n-expanded"><x:ct-x:n-expanded-proper" /></x:w-> </x:at-> </x:wh-> <x:o-> <x:at-x:s-ntb:children" > <x:w-x:n-hierarchy"x:s-$hierarchy" /> <x:w-x:n-locator"x:s-$locator" /> <x:w-x:n-expanded"><x:ct-x:n-expanded-proper" /></x:w-> </x:at-> </x:o-> </x:c-> </x:t-> <x:t-x:n-leaf-template"> <x:p-x:n-hierarchy"x:s-\'\'" /> <x:p-x:n-locator" /> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">css</x:w-> </x:ct-> <x:a-x:n-class"> <xsl:if test="@rootenabled = \'true\'">root </xsl:if> <xsl:if test="@cssclass"><x:v-x:s-@cssclass" /></xsl:if> </x:a-> <x:a-x:n-style"> <xsl:if test="@cssstyle"><x:v-x:s-@cssstyle" /></xsl:if> </x:a-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">expander</x:w-> </x:ct-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">selector</x:w-> </x:ct-> <xsl:if test="number(@tabindex) > -1"> <x:a-x:n-tabindex"><x:v-x:s-@tabindex" /></x:a-> </xsl:if> <x:a-x:n-class"> <xsl:if test="@selected and @selected=\'true\'">selected</xsl:if> </x:a-> <div class="leaf"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">node</x:w-> </x:ct-> <x:a-x:n-onmousedown"> <x:ct-x:n-notify"> <x:w-x:n-local-name"x:s-\'chooser\'" /> </x:ct-> </x:a-> <x:a-x:n-onmouseover"> <x:ct-x:n-notify" /> </x:a-> <x:a-x:n-onmouseout"> <x:ct-x:n-notify" /> </x:a-> <div> <xsl:if test="$sidebar = \'true\'"> <div class="sidebar"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">sidebar</x:w-> </x:ct-> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">flag</x:w-> </x:ct-> <x:a-x:n-class">flag <x:v-x:s-@flag" /></x:a-> <x:ct-x:n-dummy" /> </div> </div> </xsl:if> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">hierarchy</x:w-> </x:ct-> <xsl:copy-ofx:s-$hierarchy" /> </div> <xsl:if test="not(@rootenabled) or @rootenabled != \'true\'"> <x:ct-x:n-junction" /> </xsl:if> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">chooser</x:w-> </x:ct-> <x:a-x:n-class"> <x:v-x:s-\'chooser\'" /> </x:a-> <div class="icon"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">icon</x:w-> </x:ct-> <xsl:if test="@icon and @icon != \'\'"><x:a-x:n-style">background-image:url(<x:v-x:s-@icon" />);</x:a-></xsl:if> <x:ct-x:n-dummy" /> </div> <div> <span class="label"> <x:ct-x:n-write-id"> <x:w-x:n-local-name">label</x:w-> </x:ct-> <x:v-x:s-@label"/> </span> </div> </div>&#160; <div style="display:block;clear:both;float:none;height:0px;width:auto;overflow:hidden;"><x:ct-x:n-dummy" /></div> </div> </div> </div> </div> </div> <x:at-x:s-ntb:children" > <x:w-x:n-hierarchy"x:s-$hierarchy" /> <x:w-x:n-locator"x:s-$locator" /> <x:w-x:n-expanded"><x:ct-x:n-expanded-proper" /></x:w-> </x:at-> </x:t-> <x:t-x:n-hierarchy"> <x:c-> <x:wh- test="../following-sibling::node()"> <div class="pipe"><x:ct-x:n-dummy" /></div> </x:wh-> <x:o-> <div class="spacer"><x:ct-x:n-dummy" /></div> </x:o-> </x:c-> </x:t-> <x:t-x:n-junction"> <x:p-x:n-locator" /> <div> <x:ct-x:n-write-id"> <x:w-x:n-local-name">junction</x:w-> </x:ct-> <x:a-x:n-class"> <x:c-> <x:wh- test="parent::node() and ../child::node() and following-sibling::node()">tee</x:wh-> <x:o->ell</x:o-> </x:c-> </x:a-> <xsl:if test="$locator and (ntb:children/ntb:node or @haschildren != \'false\')"> <x:a-x:n-onmousedown"> <x:ct-x:n-notify"> <x:w-x:n-local-name">junction</x:w-> </x:ct-> </x:a-> </xsl:if> <x:ct-x:n-dummy" /> </div> </x:t-> <x:t-x:n-write-id"> <x:p-x:n-local-name"/> <x:p-x:n-id"/> <x:va-x:n-_id"> <x:c-> <x:wh- test="$id"> <x:v-x:s-$id"/> </x:wh-> <x:o-> <x:v-x:s-@id"/> </x:o-> </x:c-> </x:va-> <x:a-x:n-id"><x:v-x:s-$_id"/><xsl:if test="$local-name!=\'\'">.<x:v-x:s-$local-name"/></xsl:if></x:a-> </x:t-> <x:t-x:n-notify"> <x:p-x:n-bubble"x:s-\'null\'" /> <x:p-x:n-local-name"/> <x:va-x:n-_id"> <x:c-> <x:wh- test="$local-name"> <x:v-x:s-concat(@id,\'.\',$local-name)"/> </x:wh-> <x:o-> <x:v-x:s-@id"/> </x:o-> </x:c-> </x:va-> var tree = $ntb(\'<x:v-x:s-//ntb:tree/@id"/>\'); if (tree == null) { nitobi.lang.throwError("The tree event could not find the component object. The element with the specified id could not be found on the page."); } tree = tree.jsObject; tree.notify(event,\'<x:v-x:s-$_id"/>\',null,<x:v-x:s-$bubble" />); </x:t-> <x:t- match="ntb:tree" mode="locator"> <x:v-x:s-concat(\'$ntb(\',&quot;\'&quot;,@id,&quot;\'&quot;,\').jsObject\')" /> </x:t-> <x:t- match="ntb:children" mode="locator"> <x:at-x:s-parent::node()" mode="locator" /> <x:v-x:s-\'.getChildren()\'" /> </x:t-> <x:t- match="ntb:node" mode="locator"> <x:at-x:s-parent::node()" mode="locator" /> <x:v-x:s-concat(\'.getById(\',&quot;\'&quot;,@id,&quot;\'&quot;,\')\')" /> </x:t-> <x:t-x:n-parent-locator"> <x:at-x:s-parent::node()" mode="locator" /> </x:t-> <x:t-x:n-dummy"> <xsl:comment>dummy</xsl:comment> </x:t-> <x:t-x:n-expanded-proper"> <x:c-> <x:wh- test="(@expanded and (@expanded = \'false\')) or (not(ntb:children) and @haschildren=\'true\')"> <x:v-x:s-\'collapsed\'" /> </x:wh-> <x:wh- test="@expanded and (@expanded = \'true\')"> <x:v-x:s-\'expanded\'" /> </x:wh-> <x:o-> <x:v-x:s-$expanded-default" /> </x:o-> </x:c-> </x:t-></xsl:stylesheet>';
nitobi.lang.defineNs("nitobi.tree");
nitobi.tree.xslTemplate = nitobi.xml.createXslProcessor(nitobiXmlDecodeXslt(temp_ntb_xslTemplate));
var temp_ntb_dataTranslator='<?xml version="1.0"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ntb="http://www.nitobi.com"> <xsl:output method="xml" omit-xml-declaration="yes" /> <xsl:keyx:n-att-lookup" match="/root/fields/@*" use="name()" /> <x:t- match="/root"> <ntb:children> <x:at- /> </ntb:children> </x:t-> <x:t- match="e"> <ntb:node> <xsl:for-eachx:s-@*"> <xsl:if test="key(\'att-lookup\',name())"> <x:a-x:n-{key(\'att-lookup\',name())}"><x:v-x:s-." /></x:a-> </xsl:if> </xsl:for-each> </ntb:node> </x:t-></xsl:stylesheet>';
nitobi.lang.defineNs("nitobi.tree");
nitobi.tree.dataTranslator = nitobi.xml.createXslProcessor(nitobiXmlDecodeXslt(temp_ntb_dataTranslator));
